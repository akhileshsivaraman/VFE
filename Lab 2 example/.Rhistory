##### geomorph #####
setwd("~/Documents/Imperial/UEBS/Lab 2 example/")
library(geomorph) # mac users will need to download XQuartz
##### geomorph #####
setwd("~/Documents/Imperial/UEBS/geomorph/")
#### Adams & Otarola-Castillo, 2013 ####
data("plethodon")
# plot original landmark data
plotAllSpecimens(plethodon$land)
# Procrustes superimposition and plot the aligned landmarks
Y.gpa <- gpagen(plethodon$land) # gpa alignment
plotAllSpecimens(Y.gpa$coords, links = plethodon$links)
# 3D data with semilandmarks
data("scallops")
View(plethodon)
View(Y.gpa)
Y.gpa2 <- gpagen(A = scallops$coorddata, # object containing landmark coordinates
curves = scallops$curvslide, # landmarks to be treated as semilandmarks on boundary curves
surfaces = scallops$surfslide # landmarks to be treated as semilandmarks on surfaces
)
View(Y.gpa2)
View(scallops)
View(plethodon)
plotAllSpecimens(Y.gpa2$coords) # 3D plot
# principal coordinate analysis
# plotTangentSpace() removed from geomorph
# gm.prcomp, summary.prcomp, plot.gm.prcomp and picknplot.shape are now used
pca <- gm.prcomp(Y.gpa$coords)
plot(pca$center) # not sure which one is the correct list
View(pca)
plot(pca$d)
plot(pca$sdev)
plot(pca$center) # not sure which one is the correct list
View(pca)
pca[["x"]]
pc1 <- pca$x
pc1 <- as.data.frame(pca$x)
View(pc1)
pc <- as.data.frame(pca$x)
plot(pc$Comp1,
pc$Comp2)
# in this data set specimens represent two species in two distinct environments
# we can use MANOVA to identify sig differences
y <- two.d.arrayay(Y.gpa$coords) # convert a 3D array into a 2D matrix
# in this data set specimens represent two species in two distinct environments
# we can use MANOVA to identify sig differences
y <- two.d.array(Y.gpa$coords) # convert a 3D array into a 2D matrix
lm <- procD.lm(y~plethodon$species*plethodon$site, iter=99)
# visualise mean shape difference between groups
# obtain average landmark coordinates for each group and the overall mean
# plot differences as thin plate spline transformation grids
ref <- mshape(Y.gpa$coords)
gp1.mn <- mshape(Y.gpa$coords[,,1:20])
plotRefToTarget(ref, gp1.mn, mag = 2,
links = plethodon$links)
# multivariate patterns of allometry can also be visualised
ratgpa <- gpagen(ratland)
plotAllometry(ratgpa$coords, ratgpa$Csize, method = "CAC")
# multivariate regression
ratlm <- procD.lm(two.d.array(ratgpa$coords)~ratgpa$Csize, iter = 999)
# combining phylogenetic data with shape data to estimate the degree of phylogenetic signal in shape
# view of the shape space with the phylogeny superimposed
data("plethspecies")
plethgpa <- gpagen(plethspecies$land)
a <- physignal(A = plethgpa$coords,
phy = plethspecies$phy,
iter = 99)
a$phy.signal
a$pvalue
plot(a$PaCA$phy)
##### geomorph #####
setwd("~/Documents/Imperial/UEBS/geomorph/")
library(geomorph) # mac users will need to download XQuartz
##### Lab 2 in R #####
setwd("~/Documents/Imperial/UEBS/Lab 2 example")
#### Quantifying morphological diversity using discrete characters ####
library(ape)
a <- read.nexus.data("Mammal_data.nex")
b <- data.frame(t(sapply(a, c)))
c <- dist(b, method = "euclidean", diag = T, upper = T) # distance matrix
d <- hclust(c) # phenogram/hierarchical clustering | problem here
plot(d)
### NMDS
library(vegan)
library(ggplot2)
library(ggrepel)
e <- as.matrix(c) # generate matrix
f <- metaMDS(e, distance = "euclidean", trymax = 999) # NMDS
plot(f$points[,1],
f$points[,2]) # simple plot
nmds <- as.data.frame(f$points)
nmds <- data.table::setDT(nmds, keep.rownames = T)
ggplot(nmds, aes(MDS1, MDS2)) + # plot with labels
geom_point(position = "jitter") +
geom_label_repel(aes(label = rn)) +
theme_bw()
### character mapping
library(geiger)
library(phytools)
tree <- read.nexus("contree.tre")
newtree <- treedata(tree, b)
sim <- make.simmap(newtree$phy, newtree$data[,1], model = "ER", 1)
#### Examining shape variation using morphometry ####
library(geomorph)
z <- readland.tps("Cambrian_trilobites.TPS.txt", specID = "ID")
y <- gpagen(z) # Procrustes
plotAllSpecimens(y$coords, mean = F) # plot landmarks of all specimens
meanshape <- mshape(y$coords) # generate mean shape of all specimens
plotRefToTarget(M1 = meanshape, # thin plate splines
M2 = y$coords[,,1]) # how to do this all in one go?
specimens <- y$coords # put each sheet into a list and apply plotRefToTarget to all elements in the list
plotRefToTarget(M1 = meanshape,
M2 = i)
### dispRity - for ordination of procrustes points
library(dispRity)
pw <- geomorph.ordination(y) # principal warps
pw <- as.data.frame(pw)
pw <- data.table::setDT(pw, keep.rownames = T)
pw3 <- pw[,1:4] # take the number of axes that account for 95% of the variation?
ggplot(pw3, aes(PC1, PC2)) +
geom_point(position = "jitter") +
geom_label_repel(aes(label = rn)) +
theme_bw()
# generate example tree via hierarchical clustering
pwnamed <- geomorph.ordination(y)
pcdist <- dist(pwnamed, method = "euclidean", diag = T, upper = T)
pcclustering <- hclust(pcdist)
plot(pcclustering)
pctree <- as.phylo(pcclustering)
par(mar = c(0,0,0,0))
plot(pctree)
# simulate evolutionary rates
traits <- c(1,2,3,1,2,3,2,3,4,1,1,
2,3,2,2,1,4,1,2,1,4,2)
pwtraits <- as.data.frame(geomorph.ordination(y))
pwtraits <- cbind(pwtraits, traits)
charactertree <- treedata(pctree, pwtraits)
View(pctree)
pctree[["edge.length"]]
# plotting PCA to tree
simmap <- make.simmap(charactertree$phy, charactertree$data[,2], model = "ER", nsim = 1)
plotSimmap(simmap, fsize = 1) # PCA is continuous, simmap works with discrete characters
# plotting characters to tree
simmap2 <- make.simmap(charactertree$phy, charactertree$data[,23], model = "ER", nsim = 1)
plotSimmap(simmap2)
dis <- disparity(phy = charactertree$phy,
data = charactertree$data[,2])
dis1 <- dispRity.through.time(data = pwnamed,
tree = pctree,
time = 3)
dis2 <- dispRity(data = pwnamed)
