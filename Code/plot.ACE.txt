plot.ACE <- function(tree_plot, ace, trees_ace, col = c("blue", "orange"), type = "pie", type.size = 0.5, tip.size = 0.5, state.names, legend.pos, ...) {

    ## Plot the tree_plot
    # Don't plot with branch lengths to retain readability (requires plot.phylo disambiguation, I think)

    plot(tree_plot, cex = 1.0, use.edge.length=FALSE, label.offset=1.0, node.depth = 2)

    ## Match the tip labels with the ace tips
    # ace$tip <- ace$tip[match(tree_plot$tip.label, rownames(ace$tip)), ]

    ## Node in tree_plots
    get.node.ace <- function(ace, tree_plot, trees_ace) {
        ## Extract the tips per clade
        get.tips.clade <- function(node, tree_plot) {
            return(extract.clade(tree_plot, node = Ntip(tree_plot) + node)$tip.label)
        }

        ## Get all tips
        all_tips <- lapply(as.list(1:Nnode(tree_plot)), get.tips.clade, tree_plot)

        ## Get the nodes of interest in the tree_ace
        get.MRCAs <- function(phy, tips) {
            return(unlist(lapply(tips, function(tip, phy) getMRCA(phy, tip), phy = phy)) - Ntip(phy))
        }
        nodes_list <- lapply(trees_ace, get.MRCAs, tips = all_tips)

        ## Getting the ace values per nodes
        get.ace <- function(one_ace, nodes) {return(one_ace$node[nodes, 1])}

        ## Get the median values for these nodes
        return(apply(do.call(rbind, mapply(get.ace, ace, nodes_list, SIMPLIFY = FALSE)), 2, median))
    }

    ## Add the nodes and tips values
    if(type == "pie") {
        tiplabels(pie = ace[[1]]$tip[,1][match(tree_plot$tip.label, names(ace[[1]]$tip[,1]))], piecol = col, cex = 0.5)
        nodelabels(pie = get.node.ace(ace, tree_plot, trees_ace), piecol = col, cex = type.size)
    }

    if(type == "thermo") {
        tiplabels(thermo = ace[[1]]$tip[,1][match(tree_plot$tip.label, names(ace[[1]]$tip[,1]))], piecol = col, cex = type.size)
        nodelabels(thermo = get.node.ace(ace, tree_plot, trees_ace), piecol = col, cex = type.size)
    }

    ## Add the legend
    if(missing(state.names)) {
        legend_text <- paste("state", colnames(ace$tip))
    } else {
        legend_text <- state.names
    }
    if(missing(legend.pos)) {
        legend.pos <- "bottomleft"
    }

    if(!is.null(legend.pos)) {
        legend(legend.pos, legend = legend_text, pch = 19, col = col, title = "Probabilities:")
    }
}